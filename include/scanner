#pragma once
#include <string>
#include <vector>
#include <memory>
#include <token>

class Scanner {
private:
    const std::string source;
    std::vector<std::unique_ptr<Token>> tokens;
    size_t start = 0, current = 0, line = 1;

    std::string get(size_t i, size_t j);
    char advance();
    char peek();
    char peek_next();
    bool at_end();
    bool match(char expected);
    bool is_digit(char c);
    bool is_alpha(char c);
    bool is_alpha_numeric(char c);

    void add_token(TokenType type);
    void add_token(TokenType type, std::any object);

    void string();
    void number();
    void identifier();
    void scan_token();

public:
    Scanner(const std::string& source);

    const std::vector<std::unique_ptr<Token>>& scan_tokens();
};
